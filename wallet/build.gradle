/*
 * This file is part of GNU Taler
 * (C) 2020 Taler Systems S.A.
 *
 * GNU Taler is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 3, or (at your option) any later version.
 *
 * GNU Taler is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * GNU Taler; see the file COPYING.  If not, see <http://www.gnu.org/licenses/>
 */
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlinx-serialization"
}

def qtart_version = "0.9.3-dev.5"

static def versionCodeEpoch() {
    return (new Date().getTime() / 1000).toInteger()
}
def gitCommit = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short=7', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    namespace 'net.taler.wallet'
    compileSdkVersion 33
    buildToolsVersion "$build_tools_version"

    defaultConfig {
        applicationId "net.taler.wallet"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode 25
        versionName "0.9.2+p2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled minify_debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "distributionChannel"
    productFlavors {
        fdroid {
            dimension "distributionChannel"
            applicationIdSuffix ".fdroid"
        }
        google {
            dimension "distributionChannel"
        }
        nightly {
            dimension "distributionChannel"
            applicationIdSuffix ".nightly"
            versionCode versionCodeEpoch()
            versionNameSuffix " ($gitCommit)"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        // Flag to enable support for the new language APIs for zxing
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }

    buildFeatures {
        viewBinding true
        compose true
    }
    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['**/*.so']
        }
        resources {
            excludes += ['META-INF/*.kotlin_module']
        }
    }

    lint {
        abortOnError true
        ignoreWarnings false
    }
}

dependencies {
    implementation project(":taler-kotlin-android")
    implementation "net.taler:qtart:$qtart_version@aar"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.browser:browser:1.4.0"

    // Compose
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.compose.material:material-icons-extended:1.3.1"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "com.google.accompanist:accompanist-themeadapter-material3:0.28.0"

    // Lists and Selection
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    // Navigation Library
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // QR codes
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0@aar'
    // needed to support zxing library in taler-kotlin-android on API < 24
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    // Nicer ProgressBar
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'

    // Markdown rendering
    final def markwon_version = '4.6.2'
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:recycler:$markwon_version"

    // Java Native access
    implementation "net.java.dev.jna:jna:5.13.0@aar"

    testImplementation "junit:junit:$junit_version"
    testImplementation 'org.json:json:20220320'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
}
